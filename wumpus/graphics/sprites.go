/*
 * Hunt the Wumpus for Raspberry Pi Pico
 * Go version
 *
 * @version     1.0.2
 * @authors     smittytone
 * @copyright   2023, Tony Smith
 * @licence     MIT
 *
 */
package graphics

type Sprite [8]byte

var BAT_01 Sprite = Sprite{0x1E, 0x38, 0x6F, 0x3E, 0x3E, 0x6F, 0x38, 0x1E}
var BAT_02 Sprite = Sprite{0xF0, 0x38, 0x6F, 0x3E, 0x3E, 0x6F, 0x38, 0xF0}

var CARRY_01 Sprite = Sprite{0x80, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}
var CARRY_02 Sprite = Sprite{0x00, 0x40, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00}
var CARRY_03 Sprite = Sprite{0x00, 0x00, 0x20, 0x30, 0x00, 0x00, 0x00, 0x00}
var CARRY_04 Sprite = Sprite{0x00, 0x00, 0x00, 0x18, 0x10, 0x00, 0x00, 0x00}
var CARRY_05 Sprite = Sprite{0x00, 0x00, 0x00, 0x00, 0x14, 0x10, 0x00, 0x00}
var CARRY_06 Sprite = Sprite{0x00, 0x00, 0x00, 0x00, 0x02, 0x10, 0x10, 0x00}
var CARRY_07 Sprite = Sprite{0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x20, 0x20}
var CARRY_08 Sprite = Sprite{0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x40}
var CARRY_09 Sprite = Sprite{0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00}

var FALL_01 Sprite = Sprite{0x02, 0x66, 0x14, 0xFD, 0xFE, 0x38, 0x40, 0x80}
var FALL_02 Sprite = Sprite{0x00, 0x02, 0x1C, 0x7F, 0xBF, 0x28, 0x66, 0x00}
var FALL_03 Sprite = Sprite{0x18, 0x5A, 0x3A, 0x3C, 0x38, 0x1E, 0x12, 0x08}
var FALL_04 Sprite = Sprite{0x00, 0x22, 0x12, 0x7C, 0x38, 0x00, 0x00, 0x00}
var FALL_05 Sprite = Sprite{0x00, 0x60, 0x10, 0x18, 0x38, 0x58, 0x10, 0x00}
var FALL_06 Sprite = Sprite{0x00, 0x00, 0x00, 0x1C, 0x3E, 0x48, 0x44, 0x00}
var FALL_07 Sprite = Sprite{0x00, 0x00, 0x08, 0x0C, 0x08, 0x04, 0x00, 0x00}
var FALL_08 Sprite = Sprite{0x00, 0x00, 0x14, 0x38, 0x00, 0x00, 0x00, 0x00}
var FALL_09 Sprite = Sprite{0x00, 0x00, 0x20, 0x10, 0x30, 0x10, 0x00, 0x00}
var FALL_10 Sprite = Sprite{0x00, 0x00, 0x00, 0x00, 0x1C, 0x08, 0x00, 0x00}
var FALL_11 Sprite = Sprite{0x00, 0x00, 0x08, 0x0C, 0x08, 0x00, 0x00, 0x00}
var FALL_12 Sprite = Sprite{0x00, 0x00, 0x10, 0x38, 0x00, 0x00, 0x00, 0x00}
var FALL_13 Sprite = Sprite{0x00, 0x00, 0x10, 0x30, 0x10, 0x00, 0x00, 0x00}
var FALL_14 Sprite = Sprite{0x00, 0x00, 0x10, 0x08, 0x10, 0x00, 0x00, 0x00}
var FALL_15 Sprite = Sprite{0x00, 0x00, 0x00, 0x10, 0x08, 0x00, 0x00, 0x00}
var FALL_16 Sprite = Sprite{0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00}
var FALL_17 Sprite = Sprite{0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}

var GRAVE Sprite = Sprite{0x01, 0x03, 0x7F, 0x93, 0xBF, 0x93, 0x7F, 0x03}

var WUMPUS_01 Sprite = Sprite{0x1E, 0x79, 0x53, 0xF9, 0xF3, 0x59, 0x73, 0x1E}
var WUMPUS_02 Sprite = Sprite{0x1C, 0x7A, 0xD6, 0x7A, 0x76, 0xDA, 0x76, 0x1C}
var WUMPUS_03 Sprite = Sprite{0x0E, 0x3D, 0x2B, 0x7D, 0x7B, 0x2D, 0x3B, 0x0E}
var WUMPUS_04 Sprite = Sprite{0x07, 0x1F, 0x15, 0x3F, 0x3D, 0x17, 0x1D, 0x07}
var WUMPUS_05 Sprite = Sprite{0x03, 0x0F, 0x0B, 0x1F, 0x1F, 0x0B, 0x0F, 0x03}
var WUMPUS_06 Sprite = Sprite{0x07, 0x03, 0x03, 0x07, 0x07, 0x03, 0x03, 0x07}
var WUMPUS_07 Sprite = Sprite{0x0F, 0x01, 0x01, 0x03, 0x03, 0x01, 0x01, 0x0F}
var WUMPUS_08 Sprite = Sprite{0x0F, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x0F}
var WUMPUS_09 Sprite = Sprite{0x07, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x07}
var WUMPUS_10 Sprite = Sprite{0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01}

var TROPHY Sprite = Sprite{0x30, 0xE8, 0x9D, 0x87, 0x87, 0x9D, 0xE8, 0x30}

var BOW_01 Sprite = Sprite{0x00, 0x00, 0x00, 0xFF, 0x52, 0x3C, 0x10, 0x00}
var BOW_02 Sprite = Sprite{0x00, 0x18, 0x76, 0x91, 0x52, 0x3C, 0x10, 0x00}
var BOW_03 Sprite = Sprite{0x18, 0x34, 0x52, 0x91, 0x52, 0x3C, 0x00, 0x00}
var BOW_04 Sprite = Sprite{0x00, 0x00, 0x00, 0xFF, 0x42, 0x3C, 0x10, 0x10}
var BOW_05 Sprite = Sprite{0x00, 0x00, 0x00, 0xFF, 0x42, 0x3C, 0x00, 0x00}

var BEGIN_01 Sprite = Sprite{0x03, 0x00, 0x00, 0x1F, 0x20, 0x20, 0x20, 0x1F}
var BEGIN_02 Sprite = Sprite{0x00, 0x03, 0x00, 0x1F, 0x20, 0x20, 0x20, 0x1F}
var BEGIN_03 Sprite = Sprite{0x00, 0x00, 0x03, 0x1F, 0x20, 0x20, 0x20, 0x1F}
var BEGIN_04 Sprite = Sprite{0x00, 0x00, 0x00, 0x1F, 0x20, 0x20, 0x20, 0x1F}
var BEGIN_05 Sprite = Sprite{0x00, 0x00, 0x00, 0x1F, 0x23, 0x20, 0x20, 0x1F}
var BEGIN_06 Sprite = Sprite{0x00, 0x00, 0x00, 0x1F, 0x20, 0x23, 0x20, 0x1F}
var BEGIN_07 Sprite = Sprite{0x00, 0x00, 0x00, 0x1F, 0x20, 0x23, 0x20, 0x1F}

var CHARSET [128][]byte = [128][]byte{
	[]byte{0x00, 0x00, 0x00},                   // space - Ascii 32
	[]byte{0xfa, 0x00},                         // !
	[]byte{0xc0, 0x00, 0xc0, 0x00},             // "
	[]byte{0x24, 0x7e, 0x24, 0x7e, 0x24, 0x00}, // #
	[]byte{0x24, 0xd4, 0x56, 0x48, 0x00},       // $
	[]byte{0xc6, 0xc8, 0x10, 0x26, 0xc6, 0x00}, // %
	[]byte{0x6c, 0x92, 0x6a, 0x04, 0x0a, 0x00}, // &
	[]byte{0xc0, 0x00},                         // '
	[]byte{0x7c, 0x82, 0x00},                   // (
	[]byte{0x82, 0x7c, 0x00},                   // )
	[]byte{0x10, 0x7c, 0x38, 0x7c, 0x10, 0x00}, // *
	[]byte{0x10, 0x10, 0x7c, 0x10, 0x10, 0x00}, // +
	[]byte{0x06, 0x07, 0x00},                   // ,
	[]byte{0x10, 0x10, 0x10, 0x10, 0x00},       // -
	[]byte{0x06, 0x06, 0x00},                   // .
	[]byte{0x04, 0x08, 0x10, 0x20, 0x40, 0x00}, // /
	[]byte{0x7c, 0x8a, 0x92, 0xa2, 0x7c, 0x00}, // 0 - Ascii 48
	[]byte{0x42, 0xfe, 0x02, 0x00},             // 1
	[]byte{0x46, 0x8a, 0x92, 0x92, 0x62, 0x00}, // 2
	[]byte{0x44, 0x92, 0x92, 0x92, 0x6c, 0x00}, // 3
	[]byte{0x18, 0x28, 0x48, 0xfe, 0x08, 0x00}, // 4
	[]byte{0xf4, 0x92, 0x92, 0x92, 0x8c, 0x00}, // 5
	[]byte{0x3c, 0x52, 0x92, 0x92, 0x8c, 0x00}, // 6
	[]byte{0x80, 0x8e, 0x90, 0xa0, 0xc0, 0x00}, // 7
	[]byte{0x6c, 0x92, 0x92, 0x92, 0x6c, 0x00}, // 8
	[]byte{0x60, 0x92, 0x92, 0x94, 0x78, 0x00}, // 9
	[]byte{0x36, 0x36, 0x00},                   // : - Ascii 58
	[]byte{0x36, 0x37, 0x00},                   //
	[]byte{0x10, 0x28, 0x44, 0x82, 0x00},       // <
	[]byte{0x24, 0x24, 0x24, 0x24, 0x24, 0x00}, // =
	[]byte{0x82, 0x44, 0x28, 0x10, 0x00},       // >
	[]byte{0x60, 0x80, 0x9a, 0x90, 0x60, 0x00}, // ?
	[]byte{0x7c, 0x82, 0xba, 0xaa, 0x78, 0x00}, // @
	[]byte{0x7e, 0x90, 0x90, 0x90, 0x7e, 0x00}, // A - Ascii 65
	[]byte{0xfe, 0x92, 0x92, 0x92, 0x6c, 0x00}, // B
	[]byte{0x7c, 0x82, 0x82, 0x82, 0x44, 0x00}, // C
	[]byte{0xfe, 0x82, 0x82, 0x82, 0x7c, 0x00}, // D
	[]byte{0xfe, 0x92, 0x92, 0x92, 0x82, 0x00}, // E
	[]byte{0xfe, 0x90, 0x90, 0x90, 0x80, 0x00}, // F
	[]byte{0x7c, 0x82, 0x92, 0x92, 0x5c, 0x00}, // G
	[]byte{0xfe, 0x10, 0x10, 0x10, 0xfe, 0x00}, // H
	[]byte{0x82, 0xfe, 0x82, 0x00},             // I
	[]byte{0x0c, 0x02, 0x02, 0x02, 0xfc, 0x00}, // J
	[]byte{0xfe, 0x10, 0x28, 0x44, 0x82, 0x00}, // K
	[]byte{0xfe, 0x02, 0x02, 0x02, 0x00},       // L
	[]byte{0xfe, 0x40, 0x20, 0x40, 0xfe, 0x00}, // M
	[]byte{0xfe, 0x40, 0x20, 0x10, 0xfe, 0x00}, // N
	[]byte{0x7c, 0x82, 0x82, 0x82, 0x7c, 0x00}, // O
	[]byte{0xfe, 0x90, 0x90, 0x90, 0x60, 0x00}, // P
	[]byte{0x7c, 0x82, 0x92, 0x8c, 0x7a, 0x00}, // Q
	[]byte{0xfe, 0x90, 0x90, 0x98, 0x66, 0x00}, // R
	[]byte{0x64, 0x92, 0x92, 0x92, 0x4c, 0x00}, // S
	[]byte{0x80, 0x80, 0xfe, 0x80, 0x80, 0x00}, // T
	[]byte{0xfc, 0x02, 0x02, 0x02, 0xfc, 0x00}, // U
	[]byte{0xf8, 0x04, 0x02, 0x04, 0xf8, 0x00}, // V
	[]byte{0xfc, 0x02, 0x3c, 0x02, 0xfc, 0x00}, // W
	[]byte{0xc6, 0x28, 0x10, 0x28, 0xc6, 0x00}, // X
	[]byte{0xe0, 0x10, 0x0e, 0x10, 0xe0, 0x00}, // Y
	[]byte{0x86, 0x8a, 0x92, 0xa2, 0xc2, 0x00}, // Z - Ascii 90
	[]byte{0xfe, 0x82, 0x82, 0x00},             // [
	[]byte{0x40, 0x20, 0x10, 0x08, 0x04, 0x00}, // forward slash
	[]byte{0x82, 0x82, 0xfe, 0x00},             // ]
	[]byte{0x20, 0x40, 0x80, 0x40, 0x20, 0x00}, // ^
	[]byte{0x02, 0x02, 0x02, 0x02, 0x02, 0x00}, // _
	[]byte{0xc0, 0xe0, 0x00},                   // '
	[]byte{0x04, 0x2a, 0x2a, 0x1e, 0x00},       // a - Ascii 97
	[]byte{0xfe, 0x22, 0x22, 0x1c, 0x00},       // b
	[]byte{0x1c, 0x22, 0x22, 0x22, 0x00},       // c
	[]byte{0x1c, 0x22, 0x22, 0xfc, 0x00},       // d
	[]byte{0x1c, 0x2a, 0x2a, 0x10, 0x00},       // e
	[]byte{0x10, 0x7e, 0x90, 0x80, 0x00},       // f
	[]byte{0x18, 0x25, 0x25, 0x3e, 0x00},       // g
	[]byte{0xfe, 0x20, 0x20, 0x1e, 0x00},       // h
	[]byte{0xbc, 0x02, 0x00},                   // i
	[]byte{0x02, 0x01, 0x21, 0xbe, 0x00},       // j
	[]byte{0xfe, 0x08, 0x14, 0x22, 0x00},       // k
	[]byte{0xfc, 0x02, 0x00},                   // l
	[]byte{0x3e, 0x20, 0x18, 0x20, 0x1e, 0x00}, // m
	[]byte{0x3e, 0x20, 0x20, 0x1e, 0x00},       // n
	[]byte{0x1c, 0x22, 0x22, 0x1c, 0x00},       // o
	[]byte{0x3f, 0x22, 0x22, 0x1c, 0x00},       // p
	[]byte{0x1c, 0x22, 0x22, 0x3f, 0x00},       // q
	[]byte{0x22, 0x1e, 0x20, 0x10, 0x00},       // r
	[]byte{0x12, 0x2a, 0x2a, 0x04, 0x00},       // s
	[]byte{0x20, 0x7c, 0x22, 0x04, 0x00},       // t
	[]byte{0x3c, 0x02, 0x02, 0x3e, 0x00},       // u
	[]byte{0x38, 0x04, 0x02, 0x04, 0x38, 0x00}, // v
	[]byte{0x3c, 0x06, 0x0c, 0x06, 0x3c, 0x00}, // w
	[]byte{0x22, 0x14, 0x08, 0x14, 0x22, 0x00}, // x
	[]byte{0x39, 0x05, 0x06, 0x3c, 0x00},       // y
	[]byte{0x26, 0x2a, 0x2a, 0x32, 0x00},       // z - Ascii 122
	[]byte{0x10, 0x7c, 0x82, 0x82, 0x00},       //
	[]byte{0xee, 0x00},                         // |
	[]byte{0x82, 0x82, 0x7c, 0x10, 0x00},       //
	[]byte{0x40, 0x80, 0x40, 0x80, 0x00},       // ~
	[]byte{0x60, 0x90, 0x90, 0x60, 0x00},       // Degrees sign - Ascii 127
}
